- var scriptSources = [];
- var styleSources = [];
- var usedScripts = []
- var usedStyles = []

//- add script to required script stack
mixin script(src)
    - scriptSources.push( src );

mixin script-tag(scriptSource)
    script(type='text/javascript',src='#{scriptSource}')

//- include every required script exactly once
mixin scripts()
    each scriptSource in scriptSources
        if usedScripts.indexOf( scriptSource ) == -1
            - usedScripts.push( scriptSource )
            +script-tag(scriptSource)

mixin style(href)
    - styleSources.push( href );

mixin style-tag(styleSource)
    link(rel='stylesheet', type='text/css' href='#{styleSource}')

mixin styles()
    each styleSource in styleSources
        if usedStyles.indexOf( styleSource ) == -1
            - usedStyles.push( styleSource );
            +style-tag(styleSource)

mixin favicon(path)
    link(rel="icon",href=path)

mixin _field(name,type,value)
    input.form-control(type=type,name=name,value=value)&attributes(attributes)

mixin field(name,type,label,value,opts)
    - var attrs = _.extend(attributes || {}, (opts && opts.attributes) ? opts.attributes : {});
    div.form-group
        label= label
        if opts && opts.inputGroup
            div.input-group
                +_field(name,type,value)&attributes(attrs)
                - var groupType = opts.inputGroup.type || "button"
                if groupType == "button"
                    span.input-group-btn
                        button.btn.btn-default(type="button",title=__(opts.inputGroup.title))
                            +glyph(opts.inputGroup.glyph)
        else
            +_field(name,type,value)&attributes(attrs)

mixin text-field(name, label, value, opts)
    +field(name, 'text', label, value, opts)&attributes(attributes)

mixin email-field(name, label, value)
    +field(name, 'email', label, value)&attributes(attributes)

mixin tel-field(name, label, value)
    +field(name, 'tel', label, value)&attributes(attributes)

mixin url-field(name, label, value)
    +field(name, 'url', label, value)&attributes(attributes)

mixin checkbox-field(name, label, value)
    div.form-group
        div.checkbox
            label
                if(value)
                    input(type='checkbox',name=name,checked="checked")&attributes(attributes)
                else
                    input(type='checkbox',name=name)&attributes(attributes)
                =label

mixin hidden-field(name, value)
    input(type='hidden', name=name, value=value)&attributes(attributes)

mixin password-field(name, label)
    +field(name, 'password', label)&attributes(attributes)

mixin date-field(name, label, value, opts)
    div.form-group
        label= label
        - var attrs = _.extend(attributes || {}, (opts && opts.attributes) ? opts.attributes : {}, { rel: "date" });
        +_field(name,"text",value)&attributes(attrs)
        input(type='hidden', name=newName + "-alt", value=value)

mixin datetime-field(name, label, value, opts)
    +date-field(name, label, value)&attributes(rel="datetime",attributes)

mixin enum-field(name, label, keyValues, value)
    div.form-group
        label= label
        select.form-control(name=name)
            each val, key in keyValues
                if(key == value)
                    option(value=key,selected='selected')= val
                else
                    option(value=key)= val

mixin _foreign-field(name, label, items, value, opts)
    select.form-control(name=name)&attributes(attributes)
        unless opts && opts.hideNone
            option(value=0)= "<"+__("None")+">"
        each item in items
            -var id = (opts && opts.idField ? item[opts.idField] : item.id)
            -var name = (opts && opts.composeName ? opts.composeName(item) : item.name)
            if(id == value)
                option(value=id,selected='selected')= name
            else
                option(value=id)= name

mixin foreign-field(name, label, items, value, opts)
    - var attrs = _.extend(attributes || {}, (opts && opts.attributes) ? opts.attributes : {});
    div.form-group
        label= label
        if opts && opts.inputGroup
            div.input-group
                +_foreign-field(name, label, items, value, opts)&attributes(attributes)
                - var groupType = opts.inputGroup.type || "button"
                if groupType == "button"
                    span.input-group-btn
                        button.btn.btn-default(type="button",title=__(opts.inputGroup.title))
                            +glyph(opts.inputGroup.glyph)
        else
            +_foreign-field(name, label, items, value, opts)&attributes(attributes)

mixin textarea-field(name, label, value) 
    div.form-group
        label= label
        textarea.form-control(name=name,rows='3')&attributes(attributes)= value


mixin textarea(name, label)
    +textarea-field(name, label, "")&attributes(attributes)

mixin modal(id,title,saveCaption)
    div.modal.fade(id=id)
        div.modal-dialog
            div.modal-content
                div.modal-header
                    button.close(data-dismiss='modal',type='button',aria-hidden='true')
                        | &times;
                    h4.modal-title= title
                div.modal-body
                    block
                div.modal-footer
                    button.btn.btn-default(data-dismiss='modal',type='button') Schließen
                    if saveCaption
                        button.btn.btn-primary(type='button')= saveCaption

mixin modal-add-edit(id,title)
    - var newId = id + '-add', newTitle = title + ' hinzufügen';
    +modal(newId, newTitle, 'Hinzufügen')
        block
    - newId = id + '-edit'; newTitle = title + ' editieren';
    +modal(newId, newTitle, 'Änderung speichern')
        block

mixin glyph(icon, classes)
    - if( classes ) classes = ' ' + classes; else classes = '';
    i.glyphicon.glyphicon(class="glyphicon-#{icon}#{classes}")&attributes(attributes)

mixin messages(messages)
    each message in messages || []
        - var classes = "alert alert-" + ( message.type || "danger" );
        div(class=classes,role="alert")&attributes(message.attributes || {})
            strong= message.title || __("Error") + ":"
            | 
            = message.text || ""

